#!/usr/bin/env bash

set -e

detect_package_manager() {
    type pacman 2>/dev/null >/dev/null && echo pacman
    type apt 2>/dev/null >/dev/null && echo apt
}

package_manager="$(detect_package_manager)"
type python3 2>/dev/null || case "$package_manager" in
 apt) sudo apt install python3 ;;
   *) echo >&2 "Don't know how to install qutebrowser using '$package_manager'"
      exit 1
      ;;
esac

base="$(cd "$(dirname $0)"; pwd)"
install_dir="$base/.build/qutebrowser"
mkdir -p "$install_dir"
cd "$install_dir"
[ -e .git ] || git clone https://github.com./qutebrowser/qutebrowser .

# XXX: The `--no-site-packages` option needs to be passed to `virtualenv` when
# installing packages. This is to prevent using the distribution's Qt (too old
# to support QtWebEngine on Ubuntu 16.04). I don't know how to pass this option
# through (upstream recommeneded) `tox` when installing dependencies, so set up
# the virtualenv manually.
#
(cd "$install_dir"
 [ -f $install_dir/.venv/bin/activate ] ||
     virtualenv --no-site-packages --python=python3 .venv
 . .venv/bin/activate
 pip3 install -r requirements.txt -r misc/requirements/requirements-pyqt.txt
)

cat > "$base/bin/qutebrowser" <<_
#!/bin/bash

# DO NOT EDIT: Generated by "$0"

# The current implementation of qutebrowser re-writes the config each run,
# removing comment, and adding it's own. This makes it difficult to figure out
# what's mine, and what's theirs. We get around this by copying our own config
# each time.
#
export XDG_CONFIG_DIR="${XDG_CONFIG_DIR:-$HOME/.config}"
qute_conf="$XDG_CONFIG_DIR/qutebrowser/qutebrowser.conf"
[ -f "\$qute_conf.template" ] &&
    cp "\$qute_conf.template" "\$qute_conf"

"$install_dir/.venv/bin/python3" \
    "$install_dir/qutebrowser.py" --backend=webengine"$@"
_

chmod +x "$base/bin/qutebrowser"
