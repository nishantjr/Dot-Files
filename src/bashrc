# TODO: Merge .local, local
PATH=$HOME/.local/bin:$PATH
PATH=$HOME/local/bin:$PATH
(type ruby && type gem) >/dev/null 2>&1 && \
    PATH=`ruby -rubygems -e "puts Gem.user_dir"`/bin:$PATH


[[ $- != *i* ]] && return

HISTCONTROL=ignoredups:ignorespace
shopt -s histappend

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

alias    ls='ls   --color=auto'
alias  grep='grep --color=auto'
alias egrep='grep --color=auto'

PS1='\u@\h\$ '

function set_term_title() {
    echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"
}

[ "_$TERM" = "_xterm" ] && PROMPT_COMMAND=set_term_title

export EDITOR='vim'

for file in ~/.bash.d/*; do
    source $file
done

alias dev='sudo systemd-nspawn --directory /var/lib/container/trusty --bind=/home/njr/ --share-system --user njr'

alias lf='ls -CF'
alias ll='ls -l'
alias st='git st'
alias commit='git commit'
alias sp=line

c() { cd "$(find-co-dir -c "$@")"; xtitle $XTITLE; }
export CHECKOUTS
while read path; do CHECKOUTS="$CHECKOUTS${CHECKOUTS:+:}$path"; done << ___
    $HOME/co/client/*/*
    $HOME/co/github/*/*
    $HOME/co/*/*
    $HOME/Dropbox/play/*
___

logs () { git log --stat "$@"; }
loga()          { local gitver=$(git --version | sed -e s/[^0-9]*//);
                  dpkg --compare-versions $gitver ge 1.7.1 \
                      && local decopt="--decorate=no"
                  git log --pretty=oneline --abbrev-commit $decopt "$@";
                }
logp()          { git log --stat -p "$@"; }
pl()            { clear; logp -1 "$@"; }
logw()          { logp --word-diff=color "$@"; }
logb()          { # log showing branch graph
    local color
    local pager="less -R"

    # "no chop" option
    if [ _"$1" = _-c ]; then shift; else pager="$pager -S"; fi

    if tty -s <&1
        then color="--color=always";
        else color="--color=never";  pager=cat
        fi
    git log --graph --decorate=short --pretty=oneline --abbrev-commit \
        $color "$@" | $pager
}
logba()         {
    if [ _"$1" = _-c ]
        then shift; logb -c --branches='*' "$@";
        else        logb    --branches='*' "$@";
        fi
}
difc()          { dif --cached "$@"; }
difw()          { dif --word-diff "$@"; }
difwc()         { dif --word-diff=color "$@"; }

function git-tar() {
    local name=$1
    [ "_$name" = _ ] && { echo >&2 "Usage: git-tar <name>" && return; }
    local version=$(git describe --always --dirty)
    git archive --format=tar --prefix="$name-$version/" HEAD \
        | gzip > "$name-$version.tar.gz"
}
